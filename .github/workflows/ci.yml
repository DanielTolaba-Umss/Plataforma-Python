name: Full Stack CI

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main, dev]

jobs:
  backend:
    name: Backend - Build & Test
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: plataforma_python_db
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven

      - name: Ensure mvnw is executable
        run: chmod +x mvnw
        working-directory: ./backend

      - name: Run tests with Maven
        run: ./mvnw test
        working-directory: ./backend
        env:
          SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/plataforma_python_db
          SPRING_DATASOURCE_USERNAME: postgres
          SPRING_DATASOURCE_PASSWORD: postgres

      # Puedes usar esto si quieres asegurar que el build se genera correctamente
      - name: Build backend (verify)
        run: ./mvnw clean package -DskipTests
        working-directory: ./backend

      # El build Docker es opcional aqu√≠, mejor dejarlo solo para el pipeline de deploy
      # - name: Build backend Docker image
      #   run: docker build -t plataforma-backend ./backend

  frontend:
    name: Frontend - Lint & Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci
        working-directory: ./front-end

      - name: Lint frontend code
        run: npm run lint
        working-directory: ./front-end

      - name: Build frontend
        run: npm run build
        working-directory: ./front-end
